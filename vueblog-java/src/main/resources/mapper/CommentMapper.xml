<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzx.mapper.CommentMapper">

    <resultMap id="pageComment" type="com.zzx.common.vo.PageComment">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="email" column="email"/>
        <result property="content" column="content"/>
        <result property="avatar" column="avatar"/>
        <result property="createTime" column="create_time"/>
        <result property="ip" column="ip"/>
        <result property="blogId" column="blog_id"/>
        <result property="parentCommentId" column="parent_comment_id"/>
        <result property="isAdminComment" column="is_admin_comment"/>
        <result property="isPublished" column="is_published"/>
        <result property="website" column="website"/>
        <result property="parentCommentNickname" column="parent_comment_nickname"/>
        <result property="qq" column="qq"/>
    </resultMap>

    <resultMap id="comment" type="com.zzx.entity.Comment">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="email" column="email"/>
        <result property="content" column="content"/>
        <result property="avatar" column="avatar"/>
        <result property="createTime" column="create_time"/>
        <result property="ip" column="ip"/>
        <result property="blogId" column="blog_id"/>
        <result property="parentCommentId" column="parent_comment_id"/>
        <result property="isAdminComment" column="is_admin_comment"/>
        <result property="isPublished" column="is_published"/>
        <result property="website" column="website"/>
        <result property="parentCommentNickname" column="parent_comment_nickname"/>
        <result property="qq" column="qq"/>
    </resultMap>
    <sql id="commentSql">
        select *
        from comment c
    </sql>

    <select id="getPageCommentList" resultMap="pageComment" parameterType="com.zzx.entity.Comment">
        <include refid="commentSql"/>
        <where>
            <if test="id != null and id != ''">
                c.id = #{id}
            </if>
            <if test="blogId != null and blogId != ''">
                and c.blog_id = #{blogId}
            </if>
            <if test="parentCommentId != null and parentCommentId != ''">
                and c.parent_comment_id = #{parentCommentId}
            </if>
        </where>
        <if test="sort != null and sort != ''">
            order by c.create_time ${sort}
        </if>
    </select>
    <select id="getPageComment" resultMap="pageComment" parameterType="com.zzx.entity.Comment">
        <include refid="commentSql"/>
        <where>
            <if test="id != null and id != ''">
                c.id = #{id}
            </if>
            <if test="blogId != null and blogId != ''">
                and c.blog_id = #{blogId}
            </if>
            <if test="parentCommentId != null and parentCommentId != ''">
                and c.parent_comment_id = #{parentCommentId}
            </if>
        </where>
        <if test="sort != null and sort != ''">
            order by c.create_time ${sort}
        </if>
    </select>
    <select id="getComment" resultMap="comment" parameterType="com.zzx.entity.Comment">
        <include refid="commentSql"/>
        <where>
            <if test="id != null and id != ''">
                c.id = #{id}
            </if>
            <if test="blogId != null and blogId != ''">
                and c.blog_id = #{blogId}
            </if>
            <if test="parentCommentId != null and parentCommentId != ''">
                and c.parent_comment_id = #{parentCommentId}
            </if>
        </where>
    </select>
    <update id="updateComment">
        update comment
        <set>
            <if test="nickname != null and nickname != ''">nickname = #{nickname},</if>
            <if test="isPublished != null">is_published = #{isPublished,jdbcType=BIT},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="email != null and email != ''">email = #{email},</if>
            <if test="website != null and website != ''">website = #{website},</if>
            <if test="ip != null and ip != ''">ip = #{ip},</if>
            <if test="content != null and content != ''">content = #{content}</if>
        </set>
        where id = #{id}
    </update>
    <delete id="deleteCommentById">
        delete
        from comment
        where id = #{id}
    </delete>
    <insert id="createComment">
        insert into comment(nickname, email, content, avatar, create_time, ip, is_admin_comment, is_published,
                            blog_id, parent_comment_id, website, parend_comment_nickname, qq)
        values (#{nickname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
                #{avatar,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{ip,jdbcType=VARCHAR},
                #{is_admin_comment,jdbcType=INTEGER}, #{isPublished,jdbcType=BIT}, #{blog_id,jdbcType=INTEGER},
                #{parent_comment_id,jdbcType=INTEGER}, #{parent_comment_id,jdbcType=INTEGER},
                #{website,jdbcType=VARCHAR}, #{parend_comment_nickname,jdbcType=VARCHAR},
                #{qq,jdbcType=VARCHAR})
    </insert>
</mapper>
